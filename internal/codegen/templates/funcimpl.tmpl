{{if .RequiresActivation}}{{/*Activate class*/ -}}
inspectable, err := ole.RoGetActivationFactory("{{.ExclusiveTo}}", ole.NewGUID(GUID{{.FuncOwner}}))
if err != nil {
    return {{range .ReturnParams -}}
        {{.GoDefaultValue}}, {{end}}err
}
v := (*{{.FuncOwner}})(unsafe.Pointer(inspectable))

{{end -}}
{{range .InParams -}}
    {{ if not .IsOut }}{{continue}}{{ end -}}
    var {{.GoVarName}} {{template "variabletype.tmpl" . -}}
    {{if .Type.IsArray}} = make({{template "variabletype.tmpl" . -}}, {{.GoVarName}}Size){{end}}
{{end -}}
{{range .ReturnParams -}}var {{.GoVarName}} {{template "variabletype.tmpl" .}}
{{end -}}
hr, _, _ := syscall.SyscallN(
    v.VTable().{{funcName .}},
    {{- if .RequiresActivation}}
        0, // this is a static func, so there's no this
    {{else}}
        uintptr(unsafe.Pointer(v)), // this
    {{end -}}
    {{range (concat .InParams .ReturnParams) -}}
        {{if .IsOut -}}
            {{if .Type.IsArray -}}
                {{/* Arrays need to pass a pointer to their first element */ -}}
                uintptr(unsafe.Pointer(&{{.GoVarName}}[0])),   // out {{.GoTypeName}}
            {{else -}}
                uintptr(unsafe.Pointer(&{{.GoVarName}})),   // out {{.GoTypeName}}
            {{end -}}
        {{else if .Type.IsPointer -}}
            uintptr(unsafe.Pointer({{.GoVarName}})),   // in {{.GoTypeName}}
        {{else if .Type.IsPrimitive -}}
            {{ if eq .GoTypeName "bool" -}}
                uintptr(*(*byte)(unsafe.Pointer(&{{.GoVarName}}))),   // in {{.GoVarName}}
            {{else -}}
                uintptr({{.GoVarName}}),   // in {{.GoVarName}}
            {{end -}}
        {{else -}}
            uintptr(unsafe.Pointer(&{{.GoVarName}})),   // in {{.GoVarName}}
        {{end -}}
    {{end -}}
)

if hr != 0 {
    return {{range .InParams}}{{if .IsOut}}{{.GoDefaultValue}}, {{end}}{{end -}}
        {{range .ReturnParams }}{{.GoDefaultValue}}, {{end}}ole.NewError(hr)
}

return {{range .InParams}}{{if .IsOut}}{{.GoVarName}}, {{end}}{{end -}}
    {{range .ReturnParams }}{{.GoVarName}},{{end}} nil
{{- /* remove trailing white space*/ -}}
